name: Release

on:
  push:
    branches: [main, cl/dev]
  release:
    types: [published]

jobs:
  pre-deploy:
    runs-on: ubuntu-latest
    steps:
      - id: set-up-environment
        name: Set up environment
        run: |
          target_staging=${{ github.ref == 'refs/heads/cl/dev' }}
          target_production=${{ startsWith(github.ref, 'refs/tags/') }}

          if [[ "$target_staging" == "true" ]]; then
            echo '::set-output name=environment::Staging'
            exit 0
          fi

          if [[ "$target_production" == "true" ]]; then
            echo '::set-output name=environment::Production'
            exit 0
          fi

          echo "Encounter unknown situation. Abort."
          exit 1
    outputs:
      environment: ${{ steps.set-up-environment.outputs.environment }}

  build-and-deploy:
    runs-on: ubuntu-latest
    needs:
      - pre-deploy
    environment: ${{ needs.pre-deploy.outputs.environment }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - id: yarn-cache-dir-path
        name: Get yarn cache directory path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - id: yarn-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Show yarn version
        run: yarn --version

      - name: Install and build
        run: |
          yarn install
          yarn build

      - uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: build
          target-folder: staging
